# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Administer {
  id: String!
  name: String!
  email: String!
  password: String!
  phone: String!
  point: Int!
  deletedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type StudyCafe {
  id: String!
  name: String!
  address: String!
  contact: String!
  timeFee: Int!
  description: String!
  openTime: String!
  closeTime: String!
  lat: Float!
  lon: Float!
  brn: String!
  seatCount: Int!
  floorPlanX: Int!
  floorPlanY: Int!
  administer: Administer!
}

type Image {
  id: String!
  url: String!
  isMain: Boolean!
  studyCafe: StudyCafe!
}

type User {
  id: String!
  name: String!
  email: String!
  phone: String!
  point: Int!
  image: String!
  deletedAt: DateTime
}

type PointTransaction {
  id: String!
  impUid: String!
  amount: Int!
  status: POINT_TRANSACTION_STATUS_ENUM!
  date: DateTime!
  user: User!
}

enum POINT_TRANSACTION_STATUS_ENUM {
  PAYMENT
  CANCEL
}

type Visit {
  id: String!
  createdAt: DateTime!
  review: Review!
  user: User!
  studyCafe: StudyCafe!
}

type Review {
  id: String!
  content: String!
  createdAt: DateTime!
  user: User!
  visit: Visit!
}

type Seat {
  id: String!
  number: String!
  location: String!
  expiredTime: Int!
  studyCafe: StudyCafe!
  user: User!
}

type Query {
  fetchLoginAdminister: Administer!
  fetchLoginUser: User!
  fetchCafeMainImage(studyCafeId: String!): Image!
  fetchLoginStudyCafes(adminId: String!): [StudyCafe!]!
  fetchStudyCafe(studyCafeId: String!): StudyCafe!
}

type Mutation {
  createAdminister(createAdministerInput: CreateAdministerInput!): Administer!
  updateLoginAdminister(updateLoginAdministerInput: UpdateLoginAdministerInput!): Administer!
  deleteLoginAdminister: Boolean!
  sendVerificationCode(email: String!): String!
  checkVerificationCode(verificationCode: String!): String!
  LoginUser(loginInput: LoginInput!): String!
  LoginAdminister(loginInput: LoginInput!): String!
  restoreAccessToken: String!
  logout: String!
  createUser(createUserInput: CreateUserInput!): User!
  updateLoginUser(updateLoginUserInput: UpdateLoginUserInput!): User!
  deleteLoginUser: Boolean!
  uploadLoginImageFile(images: [Upload!]!): [String!]!
  createLoginPointTransaction(createPointTransactionInput: CreatePointTransactionInput!): PointTransaction!
  cancelLoginPointTransaction(cancelPointTransactionInput: CancelPointTransactionInput!): PointTransaction!
  createSeats(createSeatsInput: CreateSeatsInput!): Seat!
  createLoginStudyCafe(createStudyCafeInput: CreateStudyCafeInput!): StudyCafe!
  createLoginCafeFloorPlan(createCateFloorPlanInput: CreateCafeFloorPlanInput!): StudyCafe!
  updateLoginStudyCafe(updateStudyCafeInput: UpdateStudyCafeInput!): StudyCafe!
  createReview(createReviewInput: CreateReviewInput!): Review!
}

input CreateAdministerInput {
  name: String!
  email: String!
  password: String!
  phone: String!
}

input UpdateLoginAdministerInput {
  password: String!
  phone: String!
}

input LoginInput {
  email: String!
  password: String!
}

input CreateUserInput {
  name: String!
  email: String!
  password: String
  phone: String
}

input UpdateLoginUserInput {
  name: String!
  email: String!
  password: String!
  phone: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input CreatePointTransactionInput {
  impUid: String!
  amount: Int!
}

input CancelPointTransactionInput {
  impUid: String!
}

input CreateSeatsInput {
  number: Int!
  location: String!
  seatCount: Int!
  studyCafeId: String!
}

input CreateStudyCafeInput {
  name: String!
  address: String!
  contact: String!
  timeFee: Int!
  description: String!
  openTime: String!
  closeTime: String!
  lat: Float!
  lon: Float!
  brn: String!
  image: [CreateImageInput!]!
}

input CreateImageInput {
  url: String!
  isMain: Boolean!
}

input CreateCafeFloorPlanInput {
  id: String!
  floorPlanX: Int!
  floorPlanY: Int!
}

input UpdateStudyCafeInput {
  name: String
  address: String
  contact: String
  timeFee: Int
  description: String
  openTime: String
  closeTime: String
  lat: Float
  lon: Float
  brn: String
  image: [CreateImageInput!]
}

input CreateReviewInput {
  content: String!
  visitId: String!
}